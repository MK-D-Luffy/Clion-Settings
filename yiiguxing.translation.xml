<application>
  <component name="AppStorage">
    <histories>
      <item value="subclass" />
      <item value="obtain Fresh Bean Factory" />
      <item value="Invoked right at the end of the singleton pre-instantiation phase, * with a guarantee that all regular singleton beans have been created * already. {@link ListableBeanFactory#getBeansOfType} calls within * this method won't trigger accidental side effects during bootstrap. * &lt;p&gt;&lt;b&gt;NOTE:&lt;/b&gt; This callback won't be triggered for singleton beans * lazily initialized on demand after {@link BeanFactory} bootstrap, * and not for any other bean scope either. Carefully use it for beans * with the intended bootstrap semantics only." />
      <item value="Invoke the given listener with the given event." />
      <item value="Allows post-processing of the bean factory in context subclasses." />
      <item value="Concurrent Hash Map" />
      <item value="Are dependencies to be injected via convention-based autowiring by name or type? * &lt;p&gt;Note that this autowire mode is just about externally driven autowiring based * on bean property setter methods by convention, analogous to XML bean definitions. * &lt;p&gt;The default mode does allow for annotation-driven autowiring. &quot;no&quot; refers to * externally driven autowiring only, not affecting any autowiring demands that the * bean class itself expresses through annotations." />
      <item value="Is this bean a candidate for getting autowired into some other bean? * &lt;p&gt;Default is {@code true}; set this to {@code false} for internal delegates * that are not meant to get in the way of beans of the same type in other places." />
      <item value="Invoke factory processors registered as beans in the context." />
      <item value="check Configuration Class Candidate" />
      <item value="Bean Definition Registry Post Processor" />
      <item value="invoke Bean Factory Post Processors" />
      <item value="Modify the application context's internal bean definition registry after its * standard initialization. All regular bean definitions will have been loaded, * but no beans will have been instantiated yet. This allows for adding further * bean definitions before the next post-processing phase kicks in." />
      <item value="Modify the application context's internal bean factory after its standard * initialization. All bean definitions will have been loaded, but no beans * will have been instantiated yet. This allows for overriding or adding * properties even to eager-initializing beans." />
      <item value="pre Instantiate Singletons" />
      <item value="Simple Jndi Bean Factory" />
      <item value="Groovy Web Application Context" />
      <item value="config Locations" />
      <item value="Annotation Aware Aspect J Auto Proxy Creator" />
      <item value="Aspect J Auto Proxy Registrar" />
      <item value="get Early Bean Reference" />
      <item value="synchronized" />
      <item value="get Wrapped Instance" />
      <item value="Return an instance, which may be shared or independent, of the specified bean." />
      <item value="do Privileged" />
      <item value="get Security Manager" />
      <item value="/ Re-register post-processor for detecting inner beans as ApplicationListeners, // moving it to the end of the processor chain (for picking up proxies etc)." />
      <item value="Merged Bean Definition Post Processor" />
      <item value="priority Ordered Post Processors" />
      <item value="Bean Post Processor Checker" />
      <item value="ROLE INFRASTRUCTURE" />
      <item value="apc Definition" />
      <item value="contains Bean Definition" />
      <item value="internal Auto Proxy Creator" />
      <item value="register Aspect J Annotation Auto Proxy Creator If Necessary" />
      <item value="Import Bean Definition Registrar" />
      <item value="shutdown Hook" />
      <item value="Configurable Listable Bean Factory" />
      <item value="set Embedded Value Resolver" />
      <item value="Embedded Value Resolver Aware" />
      <item value="populate Bean" />
      <item value="Servlet Context Aware" />
      <item value="cast" />
      <item value="is Trace Enabled" />
      <item value="Root Bean Definition" />
      <item value="Import Selector" />
      <item value="see" />
      <item value="set Autowired Annotation Type" />
      <item value="Instantiation Aware Bean Post Processor Adapter" />
      <item value="invoke Aware Methods" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="397" />
        <entry key="ENGLISH" value="398" />
        <entry key="CHINESE_TRADITIONAL" value="1" />
        <entry key="ARABIC" value="1" />
        <entry key="AMHARIC" value="1" />
        <entry key="ESTONIAN" value="1" />
        <entry key="BULGARIAN" value="1" />
        <entry key="ICELANDIC" value="1" />
        <entry key="POLISH" value="1" />
        <entry key="DANISH" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="KAZAKH" value="1" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="3" />
        <entry key="MALAGASY" value="1" />
        <entry key="MARATHI" value="1" />
        <entry key="BENGALI" value="1" />
        <entry key="SLOVAK" value="1" />
        <entry key="IGBO" value="1" />
        <entry key="ITALIAN" value="4" />
        <entry key="VIETNAMESE" value="4" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>